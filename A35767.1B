	.TITLE MONAUT
;
;MONACO AUTO PILOT ROUTINE
;
	.RADIX 16
	.CSECT
	.LIST MEB
	.NLIST	BYT
;
;ENTRY POINT
;
	.GLOBL	AUTO,STDRN
;
;EXTERNAL REF'S
;
	.GLOBL	VPOS,HPOS,DRGOAL,HPOSL,VPOSL,SVPOS,SHPOS
	.GLOBL	MAPPT,TEMP,XTEMP,STEMP
	.GLOBL	ROTATE,FRAME,VEL,HINC,VINC,STAT,DSKDCT
	.GLOBL	XINDEX,DVISBL,DCOLOR,DIREC,MODE,VEL,POSLAST

	.GLOBL	PTSTAMP,INDEX	;ROUTINES

MAXSPD	=0C8
MINSPD	=40

AUTO:	
	LDAA	D,XINDEX+1	;TEST IF A PLAYER
	BEQ	70$
	LDAA	D,STAT+1	;IN COLLISION?
	ANDA	I,1
	BEQ	50$		;NO
	LDAA	D,DSKDCT
	BMI	80$
	LDAA	D,ROTATE+1	;ALTER ROTATION AND DIRECTION
	ADDA	I,3
	CMPA	I,0BF		;MOD 24 (TOP 5 BITS)
	BLS	20$
	SUBA	I,0C0
20$:	STAA	D,DIREC+1
	STAA	D,ROTATE+1
50$:	LDAA	D,DSKDCT	;NO CONTROL UNTIL DSKDCT EQUAL 0
	BEQ	AUTO1
	ADDA	I,8
	STAA	D,DSKDCT
70$:	RTS
80$:	ADDA	I,8
	STAA	D,DSKDCT
AUTO1:	LDAA	D,VPOS+1	;DRONE VERTICAL
	ANDA	I,70
	LSRA
	LDAB	D,HPOS+1	;DRONE HORIZTONAL
	LSRB
	LSRB
	LSRB			;LOW NIBBLE
	LSRB
	ABA			;POSITION IN MAP
	STAA	D,MAPPT+1	;LOW BYTE OF PTR
	JSR	PTSTAMP		;POINT INTO THE MAP X=PT
	LDAB	X,0		;GET CELL #
	ANDB	I,1F		;ONE OF 32 POSSIBLE
	CMPB	I,0C
	BLT	10$
	SUBB	I,04
10$:	ASLB
	ASLB			;TIMES 4
	LDAA	D,HPOS+1	;DRONE POSITION
	BITA	I,8		;DETERMINE QUADRANT
	BEQ	20$		;ZERO OR TWO
	INCB			;ONE OR THREE
20$:	LDAA	D,VPOS+1
	BITA	I,8		;DETERMINE QUADRANT
	BEQ	40$		;GOT IT ON B
	INCB			;QUADRANTS 2 OR 3
	INCB
40$:
	LDX 	I,PTTAB		;PTR TABLE
	JSR	INDEX		;POINT TO ENTRY
	LDAA	X,0		;GET STAMP OFFSETS OF DESTINATION
	ANDA	I,0F0		;HORIZONTAL OFFSET
	LSRA
	STAA	D,TEMP		;SAVE IT H
	LDAA	X,0		;GET OFFSETS AGAIN
	ANDA	I,0F
	ASLA
	ASLA
	ASLA
	STAA	D,TEMP+1	;SAVE DEST V
PTGOAL:	CLR	E,STEMP		;QUADRANT "SIGN" HOLDER
	LDAA	D,HPOS+1	;GET HORIZ POSITION
	LDAB	D,HPOSL+1
	ROLB
	ROLA			;GET STAMP IN HIGH 5 BITS
	ROLB			;AND 3 BITS OF LINE
	ROLA
	ROLB
	ROLA
	ANDA	I,07F
	LDAB	D,TEMP		;GET DESTINATION GOAL
	TST	E,HINC+1	;TEST DIRECTION H
	BPL	40$		;GOING RIGHT
	SUBB	I,8		;DECR STAMP BY ONE
	BPL	50$		;NO WRAP
	ANDB	I,7F		;REMOVE SIGN
	ORAA	I,80		;MAKE CURRENT POSITION BIGGER
	BRA	50$
40$:	ADDB	I,8		;INCR STAMP POSITION BY ONE
50$:	SBA			;FORM DELTA H
	BCC	60$
	INC	E,STEMP
	INC	E,STEMP		;6502 TYPE 9TH BIT SIGN IN D1
	NEGA			;POSITIVE DELTA H
60$:	STAA	D,XTEMP		;DELTA H
	LDAA	D,VPOS+1	;DRONE VERTICAL
	LDAB	D,VPOSL+1
	ROLB
	ROLA			;STAMP IN HIGH 5 BITS
	ROLB			;LINE NUMBER IN LOW 3 BITS
	ROLA
	ROLB
	ROLA
	ANDA	I,07F
	LDAB	D,TEMP+1	;GET DESTINATION
	TST	E,VINC+1	;TEST DIRECTION V
	BPL	70$		;GOING UP
	SUBB	I,8		;DECR STAMP BY ONE
	BPL	80$		;NO WRAP
	ANDB	I,7F		;REMOVE NEGATIVE SIGN
	ORAA	I,80		;MAKE CURRENT POSITION BIGGER
	BRA	80$
70$:	ADDB	I,8		;INCR STAMP BY ONE
80$:	SBA			;FORM DELTA V
	BCC	90$
	INC	E,STEMP		;6502 TYPE 9TH SIGN BIT
	NEGA			;POSITIVE DELTA V
90$:	STAA	D,XTEMP+1	;SAVE DELTA V
	BEQ	INTERP		;DON'T DIVIDE 0
	LDAA	I,0FF		;INFINITY
	TST	E,XTEMP		;TEST DELTA H
	BEQ	INTERP		;DONT DIVIDE BY 0
;
;DIVIDE RISE BY RUN TO GET TANGENT
;IE DELTA V/DELTA H
;
;NOTE-WE ARE GETTING THE COTANGENT
;
DIVIDE:	CLRA			;ZERO REMINDER
	CLRB			;ZERO LOW QUOTIENT
	LDX	I,12.		;LOOP COUNTER
20$:	ASLB			;SHIFT LOW QUOTIENT
	ROL	E,XTEMP		;SHIFT HIGH QUOTIENT DELTA X
	ROLA			;SHIFT REMAINDER
	BCS	30$		;OVERFLOW
	CMPA	D,XTEMP+1	;TRAIL SUBTRACT DIVISOR DELTA Y
	BCS	40$		;JUST SHIFT -BRANCH IF LOWER
30$:	SUBA	D,XTEMP+1	;REAL SUBTRACT DIVISIOR DELTA Y
	INCB			;NEXT BIT IN QUOTIENT
40$:	DEX
	BNE	20$
	TBA			;A,B HAS THE RESULT
	.PAGE
;
;INTERPOLATE A ROTATION IN A 15 DEGREE TANGENT TABLE
;
;A IS THE CALCULATED TARGET
;
INTERP:	STAA	D,XTEMP+1	;SAVE TANGENT
	LDX	I,TANGENTS+6	;TABLE PTR
	LDAB	I,6		;ROTATION
	TST	E,XTEMP		;TEST HIGH QUOTIENT
	BNE	50$		;TREAT AS INFINITY
10$:	DEX
	DECB
	BEQ	50$		;DONE ITS ZERO
	LDAA	X,0		;GET TANGENT
	CMPA 	D,XTEMP+1
	BHI	10$
	SUBA	D,XTEMP+1	;GET DISTANCE
	STAA	D,STEMP+1
	LDAA	X,1		;GET HIGHER TANGENT
	SUBA	D,XTEMP+1	;GET DISTANCE
	CMPA	D,STEMP		;WHICH IS CLOSER?
	BHI	50$
	INX			;LARGE ONE IS CLOSER
	INCB	
50$:	LDAA	D,STEMP		;GET QUANDRAT
	BEQ	60$		;QUAD ZERO
	CMPA	I,3
	BNE	70$		;NOT QUAD 3
60$:	LDAA	I,6		;TAKE 6-ANGLE
	SBA
	TAB			;B IS THE CONVERTED ANGLE
70$:	
	LDX	I,QUADS
	LDAA	D,STEMP		;GET QUADANT INDEX
	BEQ	80$
75$:	INX			;MOVE INDEX
	DECA
	BNE	75$
80$:	ADDB	X,0		;OFFSET ROTATION TO QUADS
	ASLB
	ASLB			;GET HIGH 5 BITS
	ASLB
	CMPB	I,23.*8.
	BLS	90$		;MOD 24
	SUBB	I,24.*8.
90$:
	STAB	D,DRGOAL	;GET DRONE ROTATION GOAL
;
;NOW UPDATE ROTATION TO THE GOAL
;	B=GOAL
;
DOROT:	STAB	D,DIREC+1		;UPDATE DIRECTIION
	LDAA	D,FRAME
	ANDA	I,03
	BNE	50$
	STAB	D,ROTATE+1		;SMOOTH UPDATE OF ROTATION
50$:
;
;CONTROL DRONE SPEED
;
DRSPD:	LDAA	D,FRAME
	ANDA	I,3		;DO IT SLOWLY
	BNE	40$
	LDAA	D,MODE
	BEQ	40$		;ATTRACT MODE
	LDAA	D,VEL+1		;GET DRONES SPEED
	ADDA	I,4		;SPEED INCREMENT
	CMPA	I,MINSPD	;MINIMUM DRONE SPEED
	BLS	30$
	LDAB	D,VEL
	SUBB	I,18
	CBA
	BHI	40$
	CMPA	I,MAXSPD	;ABSOLUTE TOP SPEED
	BHI	40$
	LDAB	D,DVISBL	;IS DRONE ON-SCREEN?
	BNE	30$		;YES, CONTINUE
	LDAB	D,VEL		;GET PLAYERS SPEED
	SUBB	I,30		;GO SLOWER THEN PLAYER
	BCS	30$		;BORROWED - PLAYER IS GOING SLOW
	TBA
30$:	STAA	D,VEL+1		;ACCELERATE DRONE
;
;AUTO CONTROL DONE
;
40$:	LDX	D,XINDEX	;RESTORE X REGISTER
	RTS
	.PAGE
;
;START THE DRONE AHEAD OF THE CARS IF ONE DOESN'T EXIST
;
STDRN:	LDAA	D,DVISBL	;0=NOT VISIBLE
	BNE	80$		;DRONE IS ALREADY ON THE SCREEN, EXIT
	LDAA	D,VEL		;TEST PLAYERS SPEED
	CMPA	I,0C0		;IS HE GOING FAST?
	BLS	90$		;NO, PASSING FROM BEHIND
	LDX	I,12.		;SET DRONE COORDS=TO PLAYER
10$:	LDAA	X,HPOS-2	;PLAYERS X,Y COORDS
	STAA	X,HPOS-1	;DRONES X,Y COORDS
	DEX
	DEX
	BNE	10$
	JSR	AUTO1		;GET DRONE ROTATION GOAL, DESTINATION PTRS
	LDAA	D,DRGOAL	;DRONES NECESSARY GOAL BECOMES HIS ROTATION
	STAA	D,ROTATE+1
	LDAA	D,TEMP		;GET DESTINATION H
	LDAB	D,TEMP+1	;GET DESTINATION V
	LDX	I,3		;LOOP COUNT 3 BITS
40$:	LSRA
	ROR	E,HPOSL+1	;SHIFT IN LINE OFFSET H
	LSRB
	ROR	E,VPOSL+1	;SHIFT IN LINE OFFSET V
	DEX
	BNE	40$
	STAB	D,VPOS+1	;SAVE STAMP OFFSET IN B
	LDAB	D,HPOS		;GET PLAYERS CELL H
	ANDB	I,0F0
	ABA			;THIS IS DRONES COMPLETE HPOS
	STAA	D,HPOS+1
	LDAA	D,VPOS
	ANDA	I,0F0		;GET PLAYERS CELL V
	ADDA	D,VPOS+1
	STAA	D,VPOS+1	;COMPLETE VPOS
	LDAA	I,MINSPD	;GET DRONE MOVING FAST
	STAA	D,VEL+1
	LDAA	D,DCOLOR	;CHANGE DRONE COLOR
	ADDA	I,40
75$:	STAA	D,DCOLOR
	LDAA	D,VPOSL+1
	SUBA	D,SVPOS+1	;IS THE DRONE ON-SCREEN?
	LDAA	D,VPOS+1
	SBCA	D,SVPOS
	ADDA	I,1
	ANDA	I,70		;MUST BE MORE THAN 10 TO NOT BE SEEN
	BNE	80$		;POSITION IS OK
	LDAA	D,HPOSL+1
	SUBA	D,SHPOS+1	;TEST IT ON SCREEN H
	LDAA	D,HPOS+1
	SBCA	D,SHPOS
	ANDA	I,70		;MORE THAN 10 IS NOT SEEN
	BNE	80$		;POSITION IS OK
;
;DRONE WOULD BE VISIBLE, MOVE HIM.
;
	LDAA	D,HPOS+1
	ADDA	I,40		;MOVE 4 COLLS RIGHT
	ANDA	I,7F
	STAA	D,HPOS+1
80$:	RTS
90$:	LDX	I,8		;GIVE DRONE PLAYERS LAST CELL POS
95$:	LDAA	X,POSLAST-2
	STAA	X,HPOS-1	;MOVE TO DRONES
	DEX
	DEX
	BNE	95$
	LDX	D,XINDEX	;RESTORE X
	LDAA	I,MAXSPD	;MAKE DRONE GO FAST
	STAA	D,VEL+1
	LDAA	D,DCOLOR	;GO CHANGE HIS COLOR
	SUBA	I,40
	BRA	75$
	.PAGE
;
;TANGENTS TABLE FOR 90 DEGREE @ 15 DEGREE
;
TANGENTS:
	.BYTE	0		;0 DEGREE
	.BYTE	4		;15 DEG
	.BYTE	9.		;30 DEG
	.BYTE	16.		;45 DEG
	.BYTE 	27.		;60 DEG
	.BYTE 	59.		;75 DEG
	.BYTE	255.		;90 DEG
;
;BASE ANGLE FOR EACH QUAD
;
QUADS:	.BYTE	18.		;CORTESIAN QUADRANT 3
	.BYTE	12.		;2
	.BYTE	0		;0
	.BYTE	6		;1
	.MACRO	P ..1,..2
	.BYTE 0'..1*16.+<0'..2&0F>
	.ENDM
;
;TABLE COVING GOAL POSITIONS IN EACH CELL
;
PTTAB:
;
;CELL 0
;
	P	7,F		;TOP LEFT QUADRANT
	P	8,F		;TOP RIGHT QUADRANT
	P	9,F		;BOTTOM LEFT QUADRANT
	P	6,F		;BOTTOM RIGHT QUADRAND
;
;CELL 1
;
	P	F,7
	P	F,7
	P	F,8
	P	F,8
;
;CELL 2
;
	P	F,8
	P	F,7
	P	F,5
	P	F,8
;
;CELL 3
;
	P	F,9
	P	F,7
	P	F,8
	P	F,8
;
;CELL 4
;
	P	6,F
	P	6,F
	P	8,F
	P	8,F
;
;CELL 5
;
	P	8,0
	P	7,0
	P	9,0
	P	7,0
;
;CELL 6
;
	P	8,8
	P	7,8
	P	8,F
	P	7,F
;
;CELL 7
;
	P	8,8
	P	F,8
	P	8,7
	P	F,7
;
;CELL 8
;
	P	F,6
	P	F,6
	P	F,9
	P	F,9
;
;CELL 9
;
	P	F,4
	P	F,6
	P	F,4
	P	F,8
;
;CELL A
;
	P	7,F
	P	6,F
	P	9,F
	P	9,F
;
;CELL B
;
	P	F,9
	P	F,6
	P	F,7
	P	F,8
;
;CELL 10
;
	P	7,0
	P	8,0
	P	9,0
	P	6,0
;
;CELL 11
;
	P	0,7
	P	0,7
	P	0,8
	P	0,8
;
;CELL 12
;
	P	7,0
	P	7,0
	P	9,0
	P	8,0
;
;CELL 13
;
	P	A,F
	P	9,F
	P	7,F
	P	8,F
;
;CELL 14
;
	P	0,6
	P	0,A
	P	0,8
	P	0,6
;
;CELL 15
;
	P	0,8
	P	0,8	
	P	0,8
	P	0,6
;
;CELL 16
;
	P	8,0
	P	7,0
	P	8,7
	P	7,7
;
;CELL 17
;
	P	0,7
	P	7,8
	P	0,8
	P	7,7
;
;CELL 18
;
	P	0,6
	P	0,6
	P	0,9
	P	0,9
;
;CELL 19
;
	P	7,0
	P	9,0
	P	B,0
	P	B,0
;
;CELL 1A
;
	P	0,7
	P	0,9
	P	0,8
	P	0,8
;
;CELL 1B
;
	P	0,6
	P	0,8
	P	0,8
	P	0,7
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                          